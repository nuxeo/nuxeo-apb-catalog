---

# Variables to hold lookup functions
admin_secret_lookup: "{{ lookup('k8s', kind='Secret', namespace=namespace, resource_name=admin_secret_name) }}"
connect_secret_lookup: "{{ lookup('k8s', kind='Secret', namespace=namespace, resource_name=connect_secret_name) }}"
password_lookup: "{{ lookup('password', '/dev/null') }}"
init_configmap_lookup: "{{ lookup('k8s', kind='ConfigMap', namespace=namespace, resource_name=init_configmap_name) }}"
service_lookup: "{{ lookup('k8s', kind='Service', namespace=namespace, resource_name=service_name) }}"
route_lookup: "{{ lookup('openshift', kind='Route', namespace=namespace, resource_name=route_name) }}"
binaries_pvc_lookup: "{{ lookup('k8s', kind='PersistentVolumeClaim', namespace=namespace, resource_name=binaries_pvc_name) }}"
transientstore_pvc_lookup: "{{ lookup('k8s', kind='PersistentVolumeClaim', namespace=namespace, resource_name=transientstore_pvc_name) }}"
data_pvc_lookup: "{{ lookup('k8s', kind='PersistentVolumeClaim', namespace=namespace, resource_name=data_pvc_name) }}"
interactive_dc_lookup: "{{ lookup('openshift', kind='DeploymentConfig', namespace=namespace, resource_name=interactive_dc_name) }}"
worker_dc_lookup: "{{ lookup('openshift', kind='DeploymentConfig', namespace=namespace, resource_name=worker_dc_name) }}"
nginx_configmap_lookup: "{{ lookup('openshift', kind='ConfigMap', namespace=namespace, resource_name=nginx_configmap_name) }}"
nginx_secret_lookup: "{{ lookup('openshift', kind='Secret', namespace=namespace, resource_name=nginx_secret_name) }}"
mongodb_servicebinding_lookup: "{{ lookup('openshift', kind='Binding', namespace=namespace, resource_name=mongodb_servicebinding_name) }}"
mongodb_credentials_lookup: "{{ lookup('openshift', kind='Secret', namespace=namespace, resource_name=mongodb_credentials_name) }}"
elasticsearch_servicebinding_lookup: "{{ lookup('openshift', kind='Binding', namespace=namespace, resource_name=elasticsearch_servicebinding_name) }}"
elasticsearch_credentials_lookup: "{{ lookup('openshift', kind='Secret', namespace=namespace, resource_name=elasticsearch_credentials_name) }}"
kafka_servicebinding_lookup: "{{ lookup('openshift', kind='Binding', namespace=namespace, resource_name=kafka_servicebinding_name) }}"
kafka_credentials_lookup: "{{ lookup('openshift', kind='Secret', namespace=namespace, resource_name=kafka_credentials_name) }}"


name: "{{ app_name if app_name is defined else 'nuxeo-' + (_apb_service_instance_id | string |truncate(5, True, '') ) }}"

# Variables to hold queries
ready_replicas_query: "[spec.replicas, status.ready_replicas]"
dc_interactive_query: "{{ interactive_dc_lookup | json_query(ready_replicas_query) | unique | count == 1 }}"
dc_worker_query: "{{ worker_dc_lookup | json_query(ready_replicas_query) | unique | count == 1 }}"
use_front_ssl_proxy: "{{ True if (secure_route_tls_termination_type is defined and secure_route_tls_termination_type != 'edge') else False }}"
has_workers: "{{ True if (worker_replicas is defined and worker_replicas > 0) else False }}"

# Whether we are in a cluster or not.
pod_name: "{{ lookup('env', 'POD_NAME') }}"
pod_namespace: "{{ lookup('env', 'POD_NAMESPACE') }}"
in_cluster: "{{ True if (pod_name and pod_namespace) else False }}"


total_number_of_nodes: "{{interactive_replicas + worker_replicas }}"
nuxeo_clustering_enabled:  "{{ total_number_of_nodes > 1 }}"
nuxeo_version_post_11: "{{ nuxeoVersion is match('[1-9][1-9]\\..*') or nuxeoVersion is match('2021\\..*')}}"
nuxeo_deployment_template: "{{ 'nuxeo_dc' if nuxeo_version_post_11 else 'nuxeo_dc_pre11' }}"

# Variables to hold resource names
admin_secret_name: "{{ name + '-admin' if auth_existingAdminSecret is undefined else auth_existingAdminSecret }}"
connect_secret_name: "{{ name + '-connect' if connectExistingSecret is undefined else connectExistingSecret }}"
admin_password: "{{ password_lookup if auth_adminPassword is undefined else auth_adminPassword }}"
init_configmap_name: "{{ name + '-config'}}"
service_name: "{{ name + '-service'}}"
route_name: "{{ name + '-route'}}"
binaries_pvc_name: "{{ name + '-binaries-pvc'}}"
transientstore_pvc_name: "{{ name + '-transientstore-pvc'}}"
data_pvc_name: "{{ name + '-data-pvc'}}"
interactive_dc_name: "{{ name + '-interactive'}}"
worker_dc_name: "{{ name + '-worker'}}"
nginx_configmap_name: "{{ name + '-nginx-conf'}}"
nginx_secret_name: "{{ name + '-cert-secret'}}"
mongodb_servicebinding_name: "{{ name + '-mongodb-service-binding'}}"
mongodb_credentials_name: "{{ name + '-mongodb-credentials'}}"
elasticsearch_servicebinding_name: "{{ name + '-elasticsearch-service-binding'}}"
elasticsearch_credentials_name: "{{ name + '-elasticsearch-credentials'}}"
kafka_servicebinding_name: "{{ name + '-kafka-service-binding'}}"
kafka_credentials_name: "{{ name + '-kafka-credentials'}}"
minio_servicebinding_name: "{{ name + '-minio-service-binding'}}"
minio_credentials_name: "{{ name + '-minio-credentials'}}"
bucket_name: "{{ name }}"
binaries_persistentVolume_accessMode: "ReadWriteMany"
transientstore_persistentVolume_accessMode: "ReadWriteMany"
data_persistentVolume_accessMode: "ReadWriteOnce"
custom_bindings_name: "{{ name + '-custom-bindings' }}"