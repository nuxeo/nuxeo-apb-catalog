---

- name: "Update last operation"
  asb_last_operation:
    description: "0%: Starting"
  when: in_cluster

- name: "Set PVC state={{ state }}"
  k8s:
    state: "{{ state }}"
    definition: "{{ lookup('template', 'pvc.yml.j2') | from_yaml }}"
  when: item.apply | default(False)
  loop:
    - desc: 'binaries pvc'
      pvc_name: "{{ binaries_pvc_name }}"
      persistentVolume_annotations: "{{ binaries_persistentVolume_annotations }}"
      persistentVolume_accessMode: "{{ binaries_persistentVolume_accessMode }}"
      persistentVolume_size: "{{ binaries_persistentVolume_size }}"
      persistentVolume_storageClass: "{{ binaries_persistentVolume_storageClass }}"
      apply: "{{ binaries_persistentVolume_enabled }}"
    - desc: 'transientstore pvc'
      pvc_name: "{{ transientstore_pvc_name }}"
      persistentVolume_annotations: "{{ transientstore_persistentVolume_annotations }}"
      persistentVolume_accessMode: "{{ transientstore_persistentVolume_accessMode }}"
      persistentVolume_size: "{{ transientstore_persistentVolume_size }}"
      persistentVolume_storageClass: "{{ transientstore_persistentVolume_storageClass }}"
      apply: "{{ transientstore_persistentVolume_enabled }}"
    - desc: 'data pvc'
      pvc_name: "{{ data_pvc_name }}"
      persistentVolume_annotations: "{{ data_persistentVolume_annotations }}"
      persistentVolume_accessMode: "{{ data_persistentVolume_accessMode }}"
      persistentVolume_size: "{{ data_persistentVolume_size }}"
      persistentVolume_storageClass: "{{ data_persistentVolume_storageClass }}"
      apply: "{{ data_persistentVolume_enabled }}"

- name: "Bind external Services state={{ state }}"
  k8s:
    state: "{{ state }}"
    definition: "{{ lookup('template', 'service_binding.yml.j2') | from_yaml }}"
  when: item.apply | default(False)
  loop:
    - service_binding_name: "{{ mongodb_servicebinding_name }}"
      service_to_bind: "{{ mongoServiceName }}"
      secret_name: "{{ mongodb_credentials_name }}"
      binding_parameters:
        database: "{{ name }}"
      apply: useExternalMongoDB
    - service_binding_name: "{{ elasticsearch_servicebinding_name }}"
      service_to_bind: "{{ elasticsearchServiceName }}"
      secret_name: "{{ elasticsearch_credentials_name }}"
      apply: useExternalElasticsearch

    - service_binding_name: "{{ kafka_servicebinding_name }}"
      service_to_bind: "{{ kafkaServiceName }}"
      secret_name: "{{ kafka_credentials_name }}"
      apply: useKafkaForStream
    - service_binding_name: "{{ minio_servicebinding_name }}"
      service_to_bind: "{{ minioServiceName }}"
      secret_name: "{{ minio_credentials_name }}"
      binding_parameters:
        bucket_name : "{{ bucket_name }}"
      apply: useMinioForBinaries

- name: "Set Nuxeo objects state={{ state }}"
  k8s:
    state: "{{ state }}"
    definition: "{{ lookup('template', item.name) | from_yaml }}"
  when: item.apply | default(True)
  loop:
    - name: admin_secret.yml.j2
    - name: connect_secret.yml.j2
      apply: "{{connect_enabled and ( connectExistingSecret is undefined )}}"
    - name: nuxeo_service.yml.j2
    - name: nuxeo_route.yml.j2
    - name: nuxeo_config.yml.j2
      apply: nuxeo_version_post_11 is False
    - name: "{{ nuxeo_deployment_template }}.yml.j2"
      apply: useCustomBindings
      dc_name: "{{ interactive_dc_name }}"
      replicas: "{{ interactive_replicas }}"
      nuxeo_type: portal
      nuxeoEnvironment: "{{ nuxeoEnvironment }}"
      nuxeoProfiles: nco-portal
    - name: "{{ nuxeo_deployment_template }}.yml.j2"
      apply: useCustomBindings is False
      dc_name: "{{ worker_dc_name }}"
      replicas: "{{ worker_replicas }}"
      nuxeo_type: worker
      nuxeoEnvironment: "{{ nuxeoEnvironment }}"
      nuxeoProfiles: nco-worker

- name: "Surely delete replicaset"
  shell: |
    kubectl delete rc -l app={{ name }},component=nuxeo


- name: "Update last operation"
  asb_last_operation:
    description: "50%: Cluster objects state={{ state }}"
  when: in_cluster

- include_tasks: "verify_{{ apb_action }}.yml"

- name: "Update last operation"
  asb_last_operation:
    description: "100%: Done"
  when: in_cluster
