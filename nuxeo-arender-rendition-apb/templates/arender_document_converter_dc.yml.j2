---
apiVersion: apps.openshift.io/v1
kind: DeploymentConfig
metadata:
  name: {{ arender_document_converter_dc_name }}
  namespace: {{ namespace }}
  labels:
    apb_name: '{{ apb_name }}'
    apb_plan_id: '{{ _apb_plan_id }}'
    apb_service_class_id: '{{ _apb_service_class_id }}'
    apb_service_instance_id: '{{ _apb_service_instance_id }}'
    app: {{ app_name }}
spec:
  replicas: 1
  selector:
    app: {{ app_name }}
    role: rendition-document-converter
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: {{ app_name }}
        role: rendition-document-converter
{% if rendition_podAnnotations is defined and (rendition_podAnnotations | from_yaml) %}
      annotations:
{{ rendition_podAnnotations | from_yaml | to_nice_yaml(indent=2) | indent(8, true) }}
{% endif %}
    spec:
      serviceAccountName: {{ arender_rendition_serviceaccount_name }}
{% if rendition_securityContext is defined and (rendition_securityContext | from_yaml) %}
      rendition_securityContext:
{{ rendition_securityContext | from_yaml | to_nice_yaml(indent=2) | indent(8, true) }}
{% endif %}
{% if use_pull_secret %}
      imagePullSecrets:
        - name: {{ arender_rendition_image_pull_secret }}
{% endif %}
      initContainers:
        - name: init-create-log-dir
          image: public.ecr.aws/e0v6o2x1/busybox
          command: ['mkdir', '-m', '770', '-p', '/logs/arender-document-converter']
          volumeMounts:
          - name: logs
            mountPath: /logs
      containers:
        - name: arender-document-converter
{% if before_4_4_2 %}
          command:
            - sh
            - ./entrypoint.sh
            - java
            - "$(JAVA_OPTS)"
            - '-jar'
            - app.jar
{% endif %}
          image: {{ arender_document_converter_image }}
          imagePullPolicy: {{ arender_document_converter_image_pullPolicy }}
          lifecycle:
            preStop:
              exec:
                command:
                  - /bin/sh
                  - /scripts/pre-stop.sh
          readinessProbe:
            failureThreshold: {{ arender_document_converter_readiness_probe_failure_threshold }}
            httpGet:
              path: {{ arender_document_converter_readiness_probe_path }}
              port: {{ arender_document_converter_internal_port }}
              scheme: HTTP
            initialDelaySeconds: {{ arender_document_converter_readiness_probe_initial_delay_secs }}
            periodSeconds: {{ arender_document_converter_readiness_probe_period_seconds }}
            successThreshold: {{ arender_document_converter_readiness_probe_success_threshold }}
            timeoutSeconds: {{ arender_document_converter_readiness_probe_timeout_seconds }}
          livenessProbe:
            httpGet:
              path: {{ arender_document_converter_liveness_probe_path }}
              port: {{ arender_document_converter_internal_port }}
            initialDelaySeconds: {{ arender_document_converter_liveness_probe_initial_delay_secs }}
            periodSeconds: {{ arender_document_converter_liveness_probe_period_seconds }}
            successThreshold: {{ arender_document_converter_liveness_probe_success_threshold }}
            timeoutSeconds: {{ arender_document_converter_liveness_probe_timeout_seconds }}
          resources: {{ arender_document_converter_resources }}
          env:
          - name: DCV_APP_EUREKA_HOSTNAME
            value: {{ arender_document_service_broker_service_name }}
          - name: DCV_APP_EUREKA_SERVER_PORT
            value: "{{ arender_document_service_broker_internal_port }}"
          - name: DCV_EUREKA_INSTANCE_METADATA.MAP_HOST.NAME
            value: {{ arender_document_converter_service_name }}
          - name: DCV_LOGGING_CONFIG
            value: "/arender/modules/document-converter/config/logback-spring.xml"
          - name: DCV_TOOLS_FFMPEG_OPTIONS
            value: "-vcodec,h264,-acodec,aac,-strict,-2,-pix_fmt,yuv420p,-vf,crop=floor(iw/2)*2:floor(ih/2)*2,-preset,ultrafast"
          - name: DCV_TOOLS_IMAGEMAGICK_OPTIONS
            value: "{{ arender_rendition_imagemagick_options }}"

          - name: DCV_IMAGE_CONVERSION_TIMEOUT
            value: "{{ arender_rendition_conversion_timeout }}"

          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: JAVA_OPTS
            value: "{{ arender_document_converter_java_opts }}"
          resources:
{% if arender_document_converter_resources is defined and (arender_document_converter_resources | from_yaml) %}
{{ arender_document_converter_resources | from_yaml | to_nice_yaml(indent=2) | indent(12, true) }}
{% endif %}
          volumeMounts:
{% if arender_rendition_monitoring_datadog_enabled %}
          - name: datadog-logs
            mountPath: "/var/log/arender-document-converter"
{% endif %}
          - name: temp
            mountPath: /arender/tmp
          - name: config
            mountPath: /arender/modules/document-converter/config
          - name: logs
            mountPath: /logs
          - name: scripts
            mountPath: /scripts
{% if arender_rendition_monitoring_datadog_enabled %}
        - name: datadog-agent
          image: gcr.io/datadoghq/agent:latest
          env:
            - name: DD_API_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ arender_rendition_monitoring_datadog_agent_secret_name }}
                  key: api_key
            - name: DD_LOGS_ENABLED
              value: "true"
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          resources:
            requests:
              memory: "256Mi"
              cpu: "200m"
            limits:
              memory: "256Mi"
              cpu: "200m"
          volumeMounts:
          - name: datadog-agent-conf
            readOnly: true
            mountPath: "/conf.d"
          - name: datadog-logs
            readOnly: true
            mountPath: "/var/log/arender-document-converter"
{% endif %}
      volumes:
        - name: temp
          persistentVolumeClaim:
            claimName: {{ arender_common_tmp_name }}
        - name: config
          configMap:
            name: {{ arender_document_converter_log_configmap_name }}
        - name: logs
          persistentVolumeClaim:
            claimName: "{{ arender_logs_pvc_name }}"
        - name: scripts
          configMap:
            defaultMode: 493
            name: {{ arender_pre_stop_scripts_configmap_name }}
{% if arender_rendition_monitoring_datadog_enabled %}
        - name: datadog-agent-conf
          configMap:
            name: {{ arender_document_converter_datadog_configmap_name }}
        - name: datadog-logs
          emptyDir: {}
{% endif %}
  triggers:
    - type: ConfigChange
