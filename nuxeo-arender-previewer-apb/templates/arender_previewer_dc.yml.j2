---
apiVersion: apps.openshift.io/v1
kind: DeploymentConfig
metadata:
  name: {{ arender_previewer_dc_name }}
  namespace: {{ namespace }}
  labels:
    apb_name: '{{ apb_name }}'
    apb_plan_id: '{{ _apb_plan_id }}'
    apb_service_class_id: '{{ _apb_service_class_id }}'
    apb_service_instance_id: '{{ _apb_service_instance_id }}'
    app: {{ app_name }}
spec:
  replicas: 1
  selector:
    app: {{ app_name }}
    role: arender-previewer
  strategy:
    activeDeadlineSeconds: 21600
    resources: {}
    rollingParams:
      intervalSeconds: 1
      maxSurge: 25%
      maxUnavailable: 25%
      timeoutSeconds: 600
      updatePeriodSeconds: 1
    type: Rolling
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: {{ app_name }}
        role: arender-previewer
{% if previewer_podAnnotations is defined and (previewer_podAnnotations | from_yaml) %}
      annotations:
{{ previewer_podAnnotations | from_yaml | to_nice_yaml(indent=2) | indent(8, true) }}
{% endif %}
    spec:
{% if previewer_securityContext is defined and (previewer_securityContext | from_yaml) %}
      previewer_securityContext:
{{ previewer_securityContext | from_yaml | to_nice_yaml(indent=2) | indent(8, true) }}
{% endif %}
      containers:
        - image: {{ arender_previewer_image }}:{{ arender_previewer_image_version }}
          imagePullPolicy: {{ previewer_image_pullPolicy }}
          lifecycle:
            preStop:
              exec:
                command:
                  - /bin/sh
                  - /scripts/pre-stop.sh
          name: arender-previewer
          readinessProbe:
            failureThreshold: 4
            httpGet:
              path: /arendergwt/health/records
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          livenessProbe:
            failureThreshold: 4
            httpGet:
              path: /arendergwt/gwt/standard/standard.css
              port: 8080
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          env:
            - name: ARENDERSRV_ARENDER_SERVER_RENDITION_HOSTS
              valueFrom:
                secretKeyRef:
                  name: {{ arender_binding_secret_name }}
                  key: broker_service_url
            - name: ARENDERSRV_NUXEO_SERVER_URL
              value: {{ previewer_nuxeo_url }}
            - name: ARENDERSRV_NUXEO_CLIENT_TIMEOUT
              value: "{{ previewer_nuxeo_client_timeout }}"
            - name: ARENDERSRV_ARENDER_SERVER_RENDITION_MAX_TRIES
              value: "{{ previewer_arender_max_tries }}"
            - name: ARENDERSRV_ARENDER_REST_CONNECTION_POOL_USE
              value: "{{ previewer_arender_rest_connection_pool_use }}"
            - name: ARENDERSRV_ARENDER_REST_CONNECTION_POOL_MAX_TOTAL
              value: "{{ previewer_arender_rest_connection_pool_max_total }}"
            - name: ARENDERSRV_ARENDER_REST_LONG_TIMEOUT
              value: "{{ previewer_arender_rest_long_timeout }}"
            - name: ARENDERSRV_NUXEO_SERVER_ARENDER_SECRET
              value: {{ previewer_nuxeo_oauth_secret }}
{% if arender_previewer_ha %}
            - name: ARENDERSRV_NUXEO_OAUTH2_STORAGE_BACKEND
              value: "hazelcast"
            - name: ARENDERSRV_NUXEO_OAUTH2_STORAGE_HAZELCAST_CLUSTER_NAME
              value: "{{ arender_previewer_hazelcast_cluster_name }}"
            - name: ARENDERSRV_NUXEO_OAUTH2_STORAGE_HAZELCAST_SERVICE_DNS
              value: "{{ arender_previewer_hazelcast_service_name }}.{{ namespace }}.svc.cluster.local"
            - name: ARENDERSRV_NUXEO_OAUTH2_STORAGE_HAZELCAST_PORT
              value: "{{ arender_previewer_hazelcast_internal_port }}"
{% endif %}
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: JAVA_OPTS
              value: "{{ arender_previewer_java_opts }}"
            - name: ARENDERSRV_ARENDER_SERVER_PERF_LOGGER_USE
              value: 'true'
{% if arender_previewer_monitoring_datadog_enabled %}
            # micrometer uses JMX to query tomcat metrics
            - name: TOMCAT_JMX_PORT
              value: "{{ monitoring_jmx_tomcat_port }}"
{% if datadog_tomcat_access_logs_enabled %}
            - name: TOMCAT_ACCESS_LOG_DIRECTORY
              value: "/var/log/arender-ui"
            - name: TOMCAT_ACCESS_LOG_MAX_DAYS
              value: "2"
{% endif %}
{% endif %}
{% if arender_previewer_monitoring_enabled %}
            - name: ARENDERSRV_ARENDER_SERVER_PERF_ES_USE
              value: 'true'
            - name: ARENDERSRV_ARENDER_SERVER_PERF_ES_HOST
              valueFrom:
                secretKeyRef:
                  name: {{ monitoring_es_binding_secret_name }}
                  key: host
            - name: ARENDERSRV_ARENDER_SERVER_PERF_ES_PORT
              value: '9200'
            - name: ARENDERSRV_ARENDER_SERVER_PERF_ES_PROTOCOL
              value: http
            - name: ARENDERSRV_ARENDER_SERVER_PERF_ES_INDEX_NAME
              value: {{ monitoring_es_index_name }}
{% endif %}
{% if arender_previewer_monitoring_datadog_enabled and after_2_1_0 %}
            - name: ARENDERSRV_ARENDER_SERVER_EXPORT_DATADOG_ENABLED
              value: 'true'
            - name: ARENDERSRV_ARENDER_SERVER_EXPORT_DATADOG_API-KEY
              valueFrom:
                secretKeyRef:
                  name: {{ datadog_agent_secret_name }}
                  key: api_key
            - name: ARENDERSRV_ARENDER_SERVER_METRICS_TAGS_HOST
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: ARENDERSRV_ARENDER_SERVER_METRICS_TAGS_APP-NAME
              value: {{ name }}
            - name: ARENDERSRV_ARENDER_SERVER_METRICS_TAGS_NAMESPACE
              value: {{ namespace }}
{% for key, value in datadog_tags_json.items() %}
            - name: "ARENDERSRV_ARENDER_SERVER_METRICS_TAGS_{{ key | upper }}"
              value: {{ value }}
{% endfor %}
{% endif %}
          resources:
{% if previewer_resources is defined and (previewer_resources | from_yaml) %}
{{ previewer_resources | from_yaml | to_nice_yaml(indent=2) | indent(12, true) }}
{% endif %}
          volumeMounts:
{% if arender_previewer_monitoring_datadog_enabled %}
          - name: datadog-logs
            mountPath: "/var/log/arender-ui"
{% endif %}
          - name: log-config
            mountPath: /usr/local/tomcat/log-config
          - name: logs
            mountPath: /usr/local/tomcat/logs
          - name: tmp
            mountPath: /usr/local/tomcat/temp
          - name: work
            mountPath: /usr/local/tomcat/work
          - name: config-volume
            mountPath: /docker-entrypoint-init.d
          - name: scripts
            mountPath: /scripts
{% if arender_previewer_monitoring_datadog_enabled %}
        - name: datadog-agent
{% if after_2_1_0 %}
          image: gcr.io/datadoghq/agent:7.33.1
{% else %}
          image: gcr.io/datadoghq/agent:7.33.1-jmx
{% endif %}
          env:
            - name: DD_API_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ datadog_agent_secret_name }}
                  key: api_key
            - name: DD_LOGS_ENABLED
              value: "true"
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          resources:
            requests:
              memory: "256Mi"
              cpu: "200m"
            limits:
              memory: "256Mi"
              cpu: "200m"
          volumeMounts:
          - name: datadog-agent-conf
            readOnly: true
{% if after_2_1_0 %}
            mountPath: "/conf.d"
{% else %}
            mountPath: "/conf.d/tomcat.d"
{% endif %}
          - name: datadog-logs
            readOnly: true
            mountPath: "/var/log/arender-ui"
{% endif %}
{% if arender_previewer_nginx_proxy_enabled %}
        - name: nginx-proxy
          image: twalter/openshift-nginx
          volumeMounts:
          - name: nginx-conf
            readOnly: true
            mountPath: "/etc/nginx/"
          - name: nginx-cache
            mountPath: "/var/cache/nginx"
          - name: nginx-tmp
            mountPath: "/var/tmp"
          ports:
          - name: http-endpoint
            containerPort: 8081
            protocol: TCP
{% endif %}

{% if use_pull_secret %}
      imagePullSecrets:
        - name: {{ arender_previewer_image_pull_secret }}
{% endif %}
      initContainers:
        - name: init-rendition-broker
          image: public.ecr.aws/e0v6o2x1/busybox
          env:
            - name: BROKER_SERVICE_DNS
              valueFrom:
                secretKeyRef:
                  name: {{ arender_binding_secret_name }}
                  key: broker_service_dns
            - name: BROKER_SERVICE_PORT
              valueFrom:
                secretKeyRef:
                  name: {{ arender_binding_secret_name }}
                  key: broker_service_port

          command: ['sh', '-c', 'until nc -w1 $BROKER_SERVICE_DNS $BROKER_SERVICE_PORT; do echo "waiting for rendition"; sleep 5; done;']
      volumes:
        - name: log-config
          configMap:
            defaultMode: 420
            name: {{ arender_previewer_log_configmap_name }}
        - name: logs
          persistentVolumeClaim:
            claimName: "{{ arender_previewer_logs_pvc_name }}"
        - name: tmp
          emptyDir: {}
        - name: work
          emptyDir: {}
        - configMap:
            defaultMode: 420
            name: {{ arender_previewer_config_name }}
          name: config-volume
        - name: scripts
          configMap:
            defaultMode: 493
            name: {{ arender_previewer_pre_stop_scripts_configmap_name }}
{% if arender_previewer_nginx_proxy_enabled %}
        - name: nginx-conf
          configMap:
            name: {{ nginx_configmap_name }}
        - name: nginx-cache
          emptyDir: {}
        - name: nginx-tmp
          emptyDir: {}
{% endif %}
{% if arender_previewer_monitoring_datadog_enabled %}
        - name: datadog-agent-conf
          configMap:
            name: {{ datadog_agent_configmap_name }}
        - name: datadog-logs
          emptyDir: {}
{% endif %}
      terminationGracePeriodSeconds: 60
  triggers:
    - type: ConfigChange
