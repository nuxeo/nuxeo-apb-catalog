## All options defined here are available to all instances.
#
init_config:

    ## @param is_jmx - boolean - required
    ## Whether or not this file is a configuration for a JMX integration.
    #
    is_jmx: true

    ## @param collect_default_metrics - boolean - optional - default: false
    ## Whether or not the check should collect all default metrics.
    #
    collect_default_metrics: true

    ## @param new_gc_metrics - boolean - optional - default: false
    ## Set to true to use better metric names for garbage collection metrics.
    ## jvm.gc.cms.count   => jvm.gc.minor_collection_count
    ##                       jvm.gc.major_collection_count
    ## jvm.gc.parnew.time => jvm.gc.minor_collection_time
    ##                       jvm.gc.major_collection_time
    ## The default value is false to ensure backward compatibility.
    #
    new_gc_metrics: true

    ## @param service_check_prefix - string - optional
    ## Custom service check prefix. e.g. `my_prefix` to get a service check called `my_prefix.can_connect`.
    ## If not set, the default service check used is the integration name.
    #
    # service_check_prefix: <SERVICE_CHECK_PREFIX>

    ## @param conf - list of mappings - optional
    ## The list of metrics to be collected by the integration
    ## Read http://docs.datadoghq.com/integrations/java/ to learn how to customize it
    ## The default metrics to be collected are kept in metrics.yaml, but you can still
    ## add your own metrics here.
    #
    conf:
      - include:
          domain: NuxeoConnector
          bean_regex:
            - "NuxeoConnector:name=okhttpMonitor.method.([a-zA-Z]+).status.([0-9]+).targetHost.(.+).targetPort.([0-9]+).targetScheme.([a-z]+).uri.(.+)"
          attribute:
            Count:
              alias: okhttp.monitor.request_count
              metric_type: counter
            # mean is in milliseconds
            Mean:
              alias: okhttp.monitor.request_duration.mean
              metric_type: gauge
            # percentiles are in milliseconds
            50thPercentile:
              alias: okhttp.monitor.request_duration.p50
              metric_type: gauge
            75thPercentile:
              alias: okhttp.monitor.request_duration.p75
              metric_type: gauge
            95thPercentile:
              alias: okhttp.monitor.request_duration.p95
              metric_type: gauge
            98thPercentile:
              alias: okhttp.monitor.request_duration.p98
              metric_type: gauge
            99thPercentile:
              alias: okhttp.monitor.request_duration.p99
              metric_type: gauge
            999thPercentile:
              alias: okhttp.monitor.request_duration.p999
              metric_type: gauge
          tags:
            method: $1
            status: $2
            target_host: $3
            target_port: $4
            target_scheme: $5
            uri: $6
      - include:
          domain: NuxeoConnector
          bean_name: NuxeoConnector:name=okhttpPoolConnectionCount.state.active
          attribute:
            Value:
              alias: okhttp.pool.connection_active
              metric_type: gauge
      - include:
          domain: NuxeoConnector
          bean_name: NuxeoConnector:name=okhttpPoolConnectionCount.state.idle
          attribute:
            Value:
              alias: okhttp.pool.connection_active
              metric_type: gauge

    ## @param service - string - optional
    ## Attach the tag `service:<SERVICE>` to every metric, event, and service check emitted by this integration.
    ##
    ## Additionally, this sets the default `service` for every log source.
    #
    service: nev-ui

## Every instance is scheduled independent of the others.
#
instances:

    ## @param host - string - required
    ## Tomcat JMX hostname to connect to.
    #
  - host: localhost

    ## @param port - integer - required
    ## Tomcat JMX port to connect to.
    #
    port: {{ monitoring_jmx_tomcat_port }}

    ## @param user - string - optional
    ## User to use when connecting to JMX.
    #
    # user: <USER>

    ## @param password - string - optional
    ## Password to use when connecting to JMX.
    #
    # password: <PASSWORD>

    ## @param process_name_regex - string - optional
    ## Instead of using a host and port, the Agent can connect using the attach API.
    ## This requires the JDK to be installed and the path to tools.jar to be set below.
    ## Note: It needs to be set when process_name_regex parameter is set
    ## e.g. .*process_name.*
    #
    # process_name_regex: <PROCESS_NAME_REGEX>

    ## @param tools_jar_path - string - optional
    ## The tool.jar path to be used with the `process_name_regex` parameter,
    ## for example: /usr/lib/jvm/java-11-openjdk-amd64/lib/tools.jar
    #
    # tools_jar_path: <TOOLS_JAR_PATH>

    ## @param name - string - optional
    ## Set the instance name to be used as the `instance` tag.
    #
    name: "%%env_POD_NAME%%"

    ## @param java_bin_path - string - optional
    ## `java_bin_path` should be set if the Agent cannot find your java executable.
    #
    # java_bin_path: <JAVA_BIN_PATH>

    ## @param java_options - string - optional
    ## A list of Java JVM options, for example: "-Xmx200m -Xms50m".
    #
    # java_options: <JAVA_OPTIONS>

    ## @param trust_store_path - string - optional
    ## The path to your trusted store.
    ## `trust_store_path` should be set if SSL is enabled.
    #
    # trust_store_path: <TRUST_STORE_PATH>

    ## @param trust_store_password - string - optional
    ## The password for your TrustStore.jks file.
    ## `trust_store_password` should be set if SSL is enabled.
    #
    # trust_store_password: <TRUST_STORE_PASSWORD>

    ## @param key_store_path - string - optional
    ## The path to your key store.
    ## `key_store_path` should be set if client authentication is enabled on the target JVM.
    #
    # key_store_path: <KEY_STORE_PATH>

    ## @param key_store_password - string - optional
    ## The password to your key store.
    ## `key_store_password` should be set if client authentication is enabled on the target JVM.
    #
    # key_store_password: <KEY_STORE_PASSWORD>

    ## @param rmi_registry_ssl - boolean - optional - default: false
    ## Whether or not the Agent should connect to the RMI registry using SSL.
    #
    # rmi_registry_ssl: false

    ## @param rmi_connection_timeout - number - optional - default: 20000
    ## The connection timeout, in milliseconds, when connecting to a remote JVM.
    #
    # rmi_connection_timeout: 20000

    ## @param rmi_client_timeout - number - optional - default: 15000
    ## The timeout to consider a remote connection, already successfully established, as lost.
    ## If a connected remote JVM does not reply after `rmi_client_timeout` milliseconds jmxfetch
    ## will give up on that connection and retry.
    #
    # rmi_client_timeout: 15000

    ## @param collect_default_jvm_metrics - boolean - optional - default: true
    ## Configures the collection of default JVM metrics.
    #
    # collect_default_jvm_metrics: true

    ## @param tags - list of strings - optional
    ## A list of tags to attach to every metric and service check emitted by this instance.
    ##
    ## Learn more about tagging at https://docs.datadoghq.com/tagging
    #
    tags:
       - namespace:{{ namespace }}
       - app_name:{{ name }}

    ## @param service - string - optional
    ## Attach the tag `service:<SERVICE>` to every metric, event, and service check emitted by this integration.
    ##
    ## Overrides any `service` defined in the `init_config` section.
    #
    # service: <SERVICE>

    ## @param min_collection_interval - number - optional - default: 15
    ## This changes the collection interval of the check. For more information, see:
    ## https://docs.datadoghq.com/developers/write_agent_check/#collection-interval
    #
    # min_collection_interval: 15

    ## @param empty_default_hostname - boolean - optional - default: false
    ## This forces the check to send metrics with no hostname.
    ##
    ## This is useful for cluster-level checks.
    #
    # empty_default_hostname: false

## Log Section
##
## type - required - Type of log input source (tcp / udp / file / windows_event)
## port / path / channel_path - required - Set port if type is tcp or udp.
##                                         Set path if type is file.
##                                         Set channel_path if type is windows_event.
## source  - required - Attribute that defines which integration sent the logs.
## encoding - optional - For file specifies the file encoding, default is utf-8, other
##                       possible values are utf-16-le and utf-16-be.
## service - optional - The name of the service that generates the log.
##                      Overrides any `service` defined in the `init_config` section.
## tags - optional - Add tags to the collected logs.
##
## Discover Datadog log collection: https://docs.datadoghq.com/logs/log_collection/
#
{% if datadog_tomcat_access_logs_enabled %}
logs:
  - type: file
    path: /var/log/arender-ui/*_access_log.*.txt
    source: nev-ui-access
    service: {{ name }}
    sourcecategory: http_web_access
    tags:
      - app_name:{{ name }}
      - log_type:tomcat_access_log
      - namespace:{{ namespace }}
{% endif %}
